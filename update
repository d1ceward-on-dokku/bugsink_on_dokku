#!/bin/bash
set -eo pipefail
trap "exit" INT

# Pull upstream changes
echo -e "\033[0;32m====>\033[0m Pull origin..."
git pull

echo -e "\033[0;32m====>\033[0m Initial check..."

# Get current release name
CURRENT_RELEASE=$(git tag --sort=committerdate | tail -1)

# Get lastest release name
RELEASE=$(curl -s https://api.github.com/repos/bugsink/bugsink/tags | jq | grep -o '"[0-9]*\.[0-9]*\.[0-9]*"'| head -1 | sed 's/\"//g')

# Exit script if already up to date
if [ "v${RELEASE}" = $CURRENT_RELEASE ]; then
  echo -e "\033[0;32m=>\033[0m Already up to date..."
  exit 0
fi

# Replace "from" line in dockerfile with the new release
sed -i "s#ARG BUGSINK_VERSION.*#ARG BUGSINK_VERSION=\"${RELEASE}\"#" Dockerfile

# Replace README link to bugsink release
BUGSINK_BADGE="[![Bugsink](https://img.shields.io/badge/Bugsink-${RELEASE}-blue.svg)](https://github.com/bugsink/bugsink/releases/tag/${RELEASE})"
sed -i "s#\[\!\[Bugsink\].*#${BUGSINK_BADGE}#" README.md

# Push changes
git add Dockerfile README.md
git commit -m "Update to bugsink version ${RELEASE}"
git push origin master

# Create tag
git tag "${RELEASE}"
git push --tags
